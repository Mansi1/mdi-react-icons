{"version":3,"sources":["components/Code.tsx","components/Style.tsx","components/ShowCase.tsx","functions/downloadUrl.ts","store/iconStore.ts","components/modal/ModalLayout.tsx","store/versionStore.ts","components/modal/IconModal.tsx","store/searchStore.ts","TopBar.tsx","components/Tag.tsx","MdiIcon.tsx","generated/iconMap.tsx","functions/getIdentityArrayMap.ts","GroupView.tsx","search/search.ts","SearchView.tsx","App.tsx","index.tsx"],"names":["hljs","registerLanguage","javascript","typescript","shell","Code","children","language","useState","undefined","value","setValue","useEffect","highlight","className","rawHTML","Style","style","React","cloneElement","defined","props","getClasses","makeStyles","root","width","display","justifyContent","alignItems","color","palette","primary","main","backgroundSize","backgroundPosition","backgroundColor","backgroundImage","community","ShowCase","icon","classes","joinClasses","author","map","size","key","flex","textAlign","alt","name","src","window","location","origin","assetsUrl","effect","height","downloadImage","url","a","fetch","response","blob","downloadBlob","iconStore","atom","position","bottom","top","right","left","flexDirection","pointerEvents","gridContainer","margin","overflowY","grid","borderRadius","padding","paddingTop","maxWidth","closeButton","float","marginTop","marginRight","cursor","fontSize","title","textOverflow","overflow","ModalLayout","onClose","hideClose","ownClasses","content","titleClass","Grid","container","justify","item","xs","sm","lg","CloseIcon","onClick","e","preventDefault","DialogContent","versionStore","pathname","indexOf","version","history","replaceState","listen","console","log","getDefaultArray","arr","defaultElement","length","getImport","importName","IconModal","selectedIcon","useStore","handleClose","set","Modal","open","evt","stopPropagation","FormControl","marginBottom","InputLabel","id","Select","labelId","onChange","target","MenuItem","show","href","lines","push","componentFileName","componentAliasFileNames","forEach","alias","join","getAllImports","TableContainer","Table","TableBody","TableRow","TableCell","component","scope","aliases","tags","openUrlInNewTab","Button","variant","searchStore","status","searchTextStore","theme","search","shape","spacing","marginLeft","paddingRight","breakpoints","up","searchIcon","inputRoot","inputInput","paddingLeft","transition","transitions","create","TopBar","searchValue","AppBar","Container","Toolbar","Typography","noWrap","SearchIcon","InputBase","placeholder","input","inputProps","endAdornment","InputAdornment","IconButton","borderTop","borderBottom","rootWrapper","Tag","addLink","navigator","clipboard","writeText","encodeURIComponent","LinkVariantIcon","arrow","common","black","tooltip","iconName","MdiIcon","memo","md","TAG_VALUES","ICON_MAP","getIdentityMap","DATA","TAG_ARRAY_MAP","array","idPropertyFun","result","i","property","getIdentityArrayMap","GroupView","searchResult","filter","tag","Fragment","searchIndex","elasticlunr","addField","setRef","metaJson","date","addDoc","loader","loadingText","fontWeight","textTransform","SearchView","triggerSearch","useDebounceFunction","useCallback","fields","boost","expand","data","get","ref","wrapperEl","CircularProgress","App","useEffectOnce","ReactDOM","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.8f39fe71.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport hljs from 'highlight.js/lib/common'\nimport {RawHTML} from '@milkscout/react'\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport shell from 'highlight.js/lib/languages/shell';\nimport 'highlight.js/styles/github-dark.css'\nimport {HighlightResult} from \"highlight.js\";\n\nhljs.registerLanguage('javascript', javascript)\nhljs.registerLanguage('typescript', typescript)\nhljs.registerLanguage('shell', shell)\n\nexport type CodeLanguage = 'javascript' |'typescript' | 'shell'\nexport interface CodeProps {\n    children: string\n    language?: CodeLanguage\n}\n\nexport const Code = ({children,language = 'typescript'}: CodeProps) => {\n    const [value, setValue] = useState<HighlightResult | undefined>(undefined);\n\n    useEffect(() => {\n        setValue(hljs.highlight(language, children))\n    }, [children, setValue, language])\n\n    return (<div>\n        <pre>\n            <code className={'language-'+language+' hljs'}>\n                <RawHTML rawHTML={value?.value || ''} />\n            </code>\n        </pre>\n    </div>);\n};\n","import React, {CSSProperties, ReactElement} from 'react';\nimport {defined} from \"@milkscout/react\";\n\nexport interface StyleProps {\n  children: ReactElement\n  style: CSSProperties\n}\n\nexport const Style = ({children, style}: StyleProps) => {\n  return  React.cloneElement(children, {\n    style: { ...defined<CSSProperties>(children?.props?.style, {}), ...style },\n  });\n\n};\n","import React from 'react';\nimport {Icon} from \"../interfaces/Icon\";\nimport {makeStyles, Theme} from '@material-ui/core/styles';\nimport {joinClasses} from \"@milkscout/react\";\nimport {Style} from \"./Style\";\nimport {LazyLoadImage} from \"react-lazy-load-image-component\";\n\nconst getClasses = makeStyles(({palette}: Theme) => ({\n    root: {\n        width: '100%',\n        display: \"flex\",\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: palette.primary.main,\n        backgroundSize: '40px 40px',\n        backgroundPosition: '0 0, 20px 20px',\n        backgroundColor: '#fff',\n        backgroundImage: 'linear-gradient(45deg, #f4f4f4 25%, transparent 25%, transparent 75%, #f4f4f4 75%, #f4f4f4),\\n' +\n            'linear-gradient(45deg, #f4f4f4 25%, transparent 25%, transparent 75%, #f4f4f4 75%, #f4f4f4)',\n    },\n    community: {\n        color: '#ff814a',\n    }\n\n}));\n\nexport interface ShowCaseProps {\n    icon: Icon\n}\n\nexport const ShowCase = ({icon}: ShowCaseProps) => {\n    const classes = getClasses();\n    return (<div className={joinClasses({[classes.root]: true, [classes.community]: icon.author === 'Google'})}>\n            {[48, 72,96].map(size => (<Style key={\"show-case-\"+size} style={{flex: 1, textAlign: 'center'}}>\n                <LazyLoadImage\n                    alt={icon.name}\n                    src={window.location.origin +'/mdi-react-icons/'+icon.assetsUrl}\n                    effect={'blur'}\n                    height={size}\n                    width={size}\n                />\n            </Style>))}\n        </div>\n    );\n};\n","import {downloadBlob} from \"@milkscout/react\";\n\nexport const downloadImage = async ( name: string,url: string,) => {\n   const response = await fetch(url);\n   const blob = await response.blob();\n   downloadBlob(name, blob)\n}\n","import { atom } from 'nanostores'\nimport {Icon} from \"../interfaces/Icon\";\n\nexport const iconStore = atom<Icon| undefined>(undefined)\n","import React, { PropsWithChildren, ReactNode } from 'react';\nimport { Grid } from '@material-ui/core';\nimport CloseIcon from '@material-ui-extra/icons/CloseIcon';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { joinClasses } from '@milkscout/react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const getClasses = makeStyles(() => ({\n  root: {\n    position: 'absolute',\n    bottom: 0,\n    top: 0,\n    right: 0,\n    left: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    pointerEvents: 'none',\n  },\n  gridContainer: {\n    margin: 'auto',\n    overflowY: 'auto',\n  },\n  grid: {\n    backgroundColor: 'white',\n    pointerEvents: 'auto',\n    overflowY: 'auto',\n    height: '100%',\n    borderRadius: 5,\n    padding: 25,\n    paddingTop: 15,\n    maxWidth: 500,\n  },\n  closeButton: {\n    padding: 0,\n    float: 'right',\n    marginTop: -5,\n    marginRight: -15,\n    cursor: 'pointer',\n    fontSize: 28,\n  },\n  title: { textOverflow: 'ellipsis', overflow: 'hidden', textAlign: 'center' },\n}));\n\nexport interface IPropsModalLayout {\n  onClose: () => void;\n  title: ReactNode;\n  classes?: { root?: string; content?: string; title?: string };\n  hideClose?: boolean;\n}\n\nexport const ModalLayout = ({\n  children,\n  onClose,\n  title,\n  hideClose = false,\n  classes = {},\n}: PropsWithChildren<IPropsModalLayout>) => {\n  const ownClasses = getClasses();\n  const { root = '', content = '', title: titleClass } = classes;\n  return (\n    <div className={ownClasses.root}>\n      <Grid container justify=\"center\" className={ownClasses.gridContainer}>\n        <Grid item xs={12} sm={10} lg={6} className={joinClasses(ownClasses.grid, root)}>\n          {!hideClose && (\n            <CloseIcon\n              color=\"primary\"\n              className={ownClasses.closeButton}\n              onClick={(e) => {\n                e.preventDefault();\n                onClose();\n              }}\n            />\n          )}\n          <h1 className={joinClasses(ownClasses.title, titleClass)}>{title}</h1>\n          <DialogContent className={content} style={{padding: 0}}>{children}</DialogContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import { atom } from 'nanostores'\n\nexport type Version ={version: 'V4' | 'V5' | 'none' }\n\nconst getDefaultValue = ():Version=> {\n    if (window.location.pathname.indexOf('/mui') >-1) {\n        return{version: \"V5\"}\n    } else if (window.location.pathname.indexOf('/material-ui')> -1){\n        return{version: \"V4\"}\n    } else {\n        window.history.replaceState({}, \"material-v5\", \"/mdi-react-icons/mui\");\n        return  {version: \"V5\"}\n    }\n}\nexport const versionStore = atom< Version>(getDefaultValue())\n\nversionStore.listen((value) => {\n    console.log('change',value, window.location.pathname)\n    if (value.version === \"V5\" && window.location.pathname.indexOf('/mui') === -1) {\n        window.history.replaceState({}, \"material-v5\", \"/mdi-react-icons/mui\");\n    } else if (value.version === \"V4\" && window.location.pathname.indexOf('/material-ui') === -1) {\n        window.history.replaceState({}, \"material-v4\", \"/mdi-react-icons/material-ui\");\n    }\n})\n","import React from 'react';\nimport {Button, FormControl, InputLabel, MenuItem, Modal, Select} from \"@material-ui/core\";\nimport {Code} from \"../Code\";\nimport {ShowCase} from \"../ShowCase\";\nimport {downloadImage} from \"../../functions/downloadUrl\";\nimport {useStore} from '@nanostores/react'\nimport {iconStore} from \"../../store/iconStore\";\nimport {ModalLayout} from \"./ModalLayout\";\nimport {Icon} from \"../../interfaces/Icon\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport {openUrlInNewTab, ViewContainer} from \"@milkscout/react\";\nimport {Version, versionStore} from \"../../store/versionStore\";\n\nexport const getDefaultArray = (arr: Array<any>, defaultElement: any) => {\n    if (!arr || arr.length === 0) {\n        return [defaultElement]\n    }\n    return arr;\n}\nconst getImport = (importName: string, version: Version) => {\n    if (version.version === 'V4') {\n        return 'import { ' + importName + ' } from \"@material-ui-extra/icons/' + importName + '\";'\n    } else {\n        return 'import { ' + importName + ' } from \"@mui-extra/icons/' + importName + '\";'\n    }\n}\n\nconst getAllImports = (icon: Icon, version: Version): string => {\n    const lines: Array<string> = [];\n    lines.push('// standard import');\n    lines.push(getImport(icon.componentFileName, version));\n    lines.push('\\n');\n    if (icon.componentAliasFileNames.length > 0) {\n        lines.push('// alias import')\n        icon.componentAliasFileNames.forEach((alias) => {\n                lines.push(getImport(alias, version));\n            }\n        )\n    }\n    return lines.join('\\n')\n}\n\nexport const IconModal = () => {\n    const selectedIcon = useStore(iconStore)\n    const version = useStore(versionStore);\n    const handleClose = () => {\n        iconStore.set(undefined)\n    }\n    const handleDownload = (icon: Icon) => {\n        return downloadImage(icon.name + '.svg', window.location.origin + '/mdi-react-icons/' + icon.assetsUrl)\n    }\n    return (<>\n        {selectedIcon && <Modal\n            open\n            onClick={(evt) => evt.stopPropagation()}\n            onClose={handleClose}\n        >\n            <>\n                <ModalLayout title={selectedIcon.name} onClose={handleClose}>\n                    <FormControl style={{marginBottom: 10}}>\n                        <InputLabel id=\"version-select-label\">Selected version</InputLabel>\n                        <Select\n                            labelId=\"version-select-label\"\n                            value={version.version}\n                            onChange={(evt) => versionStore.set({version: evt.target.value as any})}\n                        >\n                            <MenuItem value={'V4'}>MATERIAL-UI V4</MenuItem>\n                            <MenuItem value={'V5'}>MATERIAL-UI V5</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <ViewContainer show={version.version === 'V4'}>\n                        <div>\n                            This library offers <a href=\"https://v4.mui.com/components/icons/#svgicon\">@material-ui\n                            SvgIcons</a> for <a href=\"https://v4.mui.com\">material ui v4</a>\n                        </div>\n                        <div>\n                            <Code language={\"shell\"}>\n                                {'#Usage:\\n' +\n                                    '#with npm\\n' +\n                                    'npm i @material-ui-extra/icons --save\\n' +\n                                    '\\n' +\n                                    '#with yarn\\n' +\n                                    'yarn add @material-ui-extra/icons'\n                                }\n                            </Code>\n                        </div>\n                    </ViewContainer>\n                    <ViewContainer show={version.version === 'V5'}>\n                        <div>\n                            This library offers <a href=\"https://mui.com/api/svg-icon/#main-content\">@mui\n                            SvgIcons</a> for <a href=\"https://mui.com\">material ui v5</a>\n                        </div>\n                        <div>\n                            <Code language={\"shell\"}>\n                                {'#Usage:\\n' +\n                                    '#with npm\\n' +\n                                    'npm i @mui-extra/icons --save\\n' +\n                                    '\\n' +\n                                    '#with yarn\\n' +\n                                    'yarn add @mui-extra/icons'\n                                }\n                            </Code>\n                        </div>\n                    </ViewContainer>\n                    <Code>\n                        {getAllImports(selectedIcon, version)}\n                    </Code>\n                    <ShowCase icon={selectedIcon}/>\n                    <TableContainer>\n                        <Table>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        Author\n                                    </TableCell>\n                                    <TableCell>{selectedIcon.author}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        Alias\n                                    </TableCell>\n                                    <TableCell>{getDefaultArray(selectedIcon.aliases, '-').join(' ')}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        Tags\n                                    </TableCell>\n                                    <TableCell>{getDefaultArray(selectedIcon.tags, '-').join(' ')}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        License\n                                    </TableCell>\n                                    <TableCell>\n                                        <div style={{cursor: 'pointer'}}\n                                             onClick={() => openUrlInNewTab('https://github.com/Templarian/MaterialDesign/blob/master/LICENSE')}>click\n                                            here\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <div style={{margin: 10, textAlign: 'center'}}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleDownload(selectedIcon)}>\n                            Download svg</Button>\n                    </div>\n                </ModalLayout>\n            </>\n        </Modal>}\n    </>);\n};\n","import { atom } from 'nanostores'\n\nexport const searchStore = atom<  {status: 'NONE' | 'LOADING'  } | {status: 'DONE', search: string, data: Array<{ ref: string, score: number}>}>({status: 'NONE'})\nexport const searchTextStore = atom<string>('')\n","import React from 'react';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {Container, InputAdornment, InputBase} from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {openUrlInNewTab, View} from \"@milkscout/react\";\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {SearchIcon} from \"@material-ui-extra/icons/SearchIcon\";\nimport {CloseIcon} from \"@material-ui-extra/icons/CloseIcon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {searchTextStore} from \"./store/searchStore\";\nimport {useStore} from \"@nanostores/react\";\nimport {versionStore} from \"./store/versionStore\";\n\nconst getClasses = makeStyles((theme: Theme) => ({\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: 'rgba(255,255,255, 0.15)',\n        '&:hover': {\n            backgroundColor: 'rgba(255,255,255, 0.25)',\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        paddingRight: 5,\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        paddingRight: 0,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n}));\n\nexport const TopBar = () => {\n    const classes = getClasses();\n    const searchValue = useStore(searchTextStore)\n    const version = useStore(versionStore);\n   \n    return (<AppBar position=\"fixed\">\n            <Container maxWidth={\"lg\"}>\n                <Toolbar>\n                    <View show={version.version === 'V4'}>\n                        <Typography variant=\"h6\" noWrap\n                                onClick={() => openUrlInNewTab('https://www.npmjs.com/package/@material-ui-extra/icons/')}>\n                        @material-ui-extra/icons\n                        </Typography>\n                    </View>\n                    <View show={version.version === 'V5'}>\n                        <Typography variant=\"h6\" noWrap\n                                onClick={() => openUrlInNewTab('https://www.npmjs.com/package/@mui-extra/icons/')}>\n                        @mui-extra/icons\n                        </Typography>\n                    </View>\n                    <div className={classes.search }>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon/>\n                        </div>\n                        <div className={classes.searchIcon}>\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{'aria-label': 'search'}}\n                            endAdornment={ \n                                <InputAdornment position={\"end\"}>\n                                    <IconButton size={\"small\"} color={'inherit'} onClick={() => {\n                                        searchTextStore.set('');\n                                    }}>\n                                        <CloseIcon/>\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            value={searchValue} onChange={(evt) => {\n                            searchTextStore.set(evt.target.value)\n                        }}\n                        />\n                    </div>\n                </Toolbar>\n            </Container>\n        </AppBar>\n    );\n};\n","import React from 'react';\nimport {makeStyles, Theme} from '@material-ui/core/styles';\nimport LinkVariantIcon from \"@material-ui-extra/icons/LinkVariantIcon\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst getClasses = makeStyles(({palette}: Theme) => ({\n    root: {\n        borderTop: `2px solid ${palette.primary.main}`,\n        borderBottom: `2px solid ${palette.primary.main}`,\n    },\n    rootWrapper: {\n        textAlign: \"center\",\n        color: \"#fff\",\n        fontSize: 25,\n        padding: 10,\n        marginTop: 4,\n        marginBottom: 4,\n        backgroundColor: palette.primary.main\n    }\n}));\n\nexport interface TagProps {\n    name: string\n    addLink?: boolean\n}\n\nexport const Tag = ({name, addLink = true}: TagProps) => {\n    const classes = getClasses();\n    return (<div className={classes.root}>\n        <div className={classes.rootWrapper}>\n            {name} {addLink && <IconButton style={{color: '#fff'}} onClick={() => {\n            navigator.clipboard.writeText(`${window.location.origin}/mdi-react-icons/#${encodeURIComponent(name)}`);\n        }}>\n            <LinkVariantIcon/>\n        </IconButton>}\n        </div>\n    </div>);\n};\n","import React from 'react';\nimport {Icon} from \"./interfaces/Icon\";\nimport {Grid} from \"@material-ui/core\";\nimport {makeStyles, Theme} from '@material-ui/core/styles';\nimport {joinClasses} from \"@milkscout/react\";\nimport {iconStore} from \"./store/iconStore\";\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nconst getClasses = makeStyles(({palette}: Theme) => ({\n    root: {\n        cursor: 'pointer',\n        textAlign: 'center',\n        '& svg': {\n            fontSize: '90px !important',\n        },\n    },\n    arrow: {\n        color: palette.common.black,\n    },\n    tooltip: {\n        fontSize: 14,\n        backgroundColor: palette.common.black,\n    },\n    iconName: {width: 90, margin: \"auto\", color: '#000'}\n}));\n\nexport interface MdiIconProps {\n    icon: Icon\n}\n\nexport const MdiIcon = React.memo(({icon}: MdiIconProps) => {\n    const classes = getClasses();\n    const handleClick = () => {\n        iconStore.set(icon)\n    }\n    return (<Grid item xs={4} sm={3} md={2} lg={1}\n              className={joinClasses({\n                  [classes.root]: true,\n              })}\n              onClick={handleClick}>\n            <LazyLoadImage\n                alt={icon.name}\n                src={window.location.origin + '/mdi-react-icons/' + icon.assetsUrl}\n                effect={'blur'}\n                height={90}\n                width={90}\n            />\n            <div className={classes.iconName}>{icon.name}</div>\n        </Grid>\n    );\n})\n","import {Icon} from \"./../interfaces/Icon\";\nimport DATA from \"@material-ui-extra/icons/meta.json\";\nimport {getIdentityMap} from \"@milkscout/react\";\nimport {getIdentityArrayMap} from \"../functions/getIdentityArrayMap\";\n\nexport type Tag = 'Account / User'|'Agriculture'|'Alert / Error'|'Alpha / Numeric'|'Animal'|'Arrange'|'Arrow'|'Audio'|'Automotive'|'Banking'|'Battery'|'Brand / Logo'|'Cellphone / Phone'|'Clothing'|'Cloud'|'Color'|'Currency'|'Database'|'Date / Time'|'Developer / Languages'|'Device / Tech'|'Drawing / Art'|'Edit / Modify'|'Emoji'|'Files / Folders'|'Food / Drink'|'Form'|'Gaming / RPG'|'Geographic Information System'|'Hardware / Tools'|'Health / Beauty'|'Holiday'|'Home Automation'|'Lock'|'Math'|'Medical / Hospital'|'Music'|'Nature'|'Navigation'|'None'|'Notification'|'People / Family'|'Photography'|'Places'|'Printer'|'Religion'|'Science'|'Settings'|'Shape'|'Shopping'|'Social Media'|'Sport'|'Text / Content / Format'|'Tooltip'|'Transportation + Flying'|'Transportation + Other'|'Transportation + Road'|'Transportation + Water'|'Vector'|'Video / Movie'|'View'|'Weather';\n\nexport const TAG_VALUES: Array<Tag> = ['Account / User','Agriculture','Alert / Error','Alpha / Numeric','Animal','Arrange','Arrow','Audio','Automotive','Banking','Battery','Brand / Logo','Cellphone / Phone','Clothing','Cloud','Color','Currency','Database','Date / Time','Developer / Languages','Device / Tech','Drawing / Art','Edit / Modify','Emoji','Files / Folders','Food / Drink','Form','Gaming / RPG','Geographic Information System','Hardware / Tools','Health / Beauty','Holiday','Home Automation','Lock','Math','Medical / Hospital','Music','Nature','Navigation','None','Notification','People / Family','Photography','Places','Printer','Religion','Science','Settings','Shape','Shopping','Social Media','Sport','Text / Content / Format','Tooltip','Transportation + Flying','Transportation + Other','Transportation + Road','Transportation + Water','Vector','Video / Movie','View','Weather'];\n\n\nexport const ICON_MAP: {[id: string]: Icon} = getIdentityMap(DATA, (icon: Icon) => icon.id);\nexport const TAG_ARRAY_MAP: {[tag: string]: Array<Icon>} = getIdentityArrayMap(DATA, (icon: Icon) => {if(!!icon.tags[0]){\n        return icon.tags[0]\n    }\n    return 'NONE'\n});","import {IdPropertyFunction} from \"@milkscout/react/function/getIdentityMap\";\n\nexport const getIdentityArrayMap = <T>(array: T[], idPropertyFun: IdPropertyFunction<T>): Record<string, Array<T>> => {\n    const result: Record<string, Array<T>> = {}\n    for(let i = 0; i < array.length; i++){\n        const item: T = array[i];\n        const property = idPropertyFun(item);\n        if(typeof result[property] === 'undefined'){\n            result[property] = []\n        }\n        result[property].push(item)\n    }\n    return result;\n}","import React from 'react';\nimport {ViewContainer} from \"@milkscout/react\";\nimport {Tag} from \"./components/Tag\";\nimport {Grid} from \"@material-ui/core\";\nimport {MdiIcon} from \"./MdiIcon\";\nimport { TAG_ARRAY_MAP } from './generated/iconMap';\nimport { TAG_VALUES } from './generated/iconMap';\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\nimport { useStore } from '@nanostores/react';\nimport {searchStore } from './store/searchStore';\n\nconst getClasses = makeStyles((theme: Theme) => ({\n    root: {\n        color: theme.palette.primary.main,\n        paddingLeft: 15,\n        paddingRight: 15\n    }\n}));\n\nexport const GroupView = () => {\n    const classes = getClasses();\n    const searchResult = useStore(searchStore)\n    return ( <ViewContainer show={searchResult.status === 'NONE'}>\n      {TAG_VALUES.filter(tag => !!TAG_ARRAY_MAP[tag]).map((tag) => {\n          return <div key={'tag-' + tag}>\n              <Tag name={tag}/>\n              <div style={{height: 30}}/>\n              <Grid container spacing={3} className={classes.root}>\n                  {TAG_ARRAY_MAP[tag].map((icon) => <React.Fragment key={icon.id}>\n                      <MdiIcon icon={icon} />\n                  </React.Fragment>)}\n              </Grid>\n              <div id={tag} style={{height: 70}}/>\n          </div>\n      })}\n  </ViewContainer>);\n};\n","import elasticlunr from \"elasticlunr\";\nimport metaJson from \"@material-ui-extra/icons/meta.json\"\n\ntype Data = {id: string; name: string; aliases: Array<string>; tags: Array<string>};\n\nexport const searchIndex = elasticlunr<Data>();\n\nsearchIndex.addField('name');\nsearchIndex.addField('aliases');\nsearchIndex.addField('tags');\nsearchIndex.setRef('id');\n\n(metaJson as Array<Data>).forEach((date) => searchIndex.addDoc(date))\n","import React, {useCallback, useEffect} from 'react';\nimport {Tag} from \"./components/Tag\";\nimport {CircularProgress, Grid} from \"@material-ui/core\";\nimport {MdiIcon} from \"./MdiIcon\";\nimport {useDebounceFunction, ViewContainer} from \"@milkscout/react\";\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {useStore} from \"@nanostores/react\";\nimport {searchStore, searchTextStore} from \"./store/searchStore\";\nimport {searchIndex} from \"./search/search\";\nimport {ICON_MAP} from './generated/iconMap';\n\nconst getClasses = makeStyles((theme: Theme) => ({\n    root: {\n        color: theme.palette.primary.main,\n        paddingLeft: 15,\n        paddingRight: 15\n    },\n    loader: {\n        marginTop: 30,\n        textAlign: 'center'\n    },\n    loadingText: {\n        marginTop: 25,\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n        color: theme.palette.primary.main,\n    }\n}));\n\nexport const SearchView = () => {\n    const classes = getClasses();\n    const searchResult = useStore(searchStore)\n    const searchValue = useStore(searchTextStore)\n\n    const triggerSearch = useDebounceFunction(useCallback(() => {\n        if(!!searchValue) {\n            const result = searchIndex.search(searchValue, {\n                fields: {\n                    name: {boost: 2},\n                    aliases: {boost: 2},\n                    tags: {boost: 1},\n                },\n                expand: true,\n            });\n            searchStore.set({status: \"DONE\", search: searchValue, data: result})\n        }else{\n            searchStore.set({status: \"NONE\"})\n        }\n    }, [searchValue]), 500, useCallback(() => {\n        if (searchStore.get().status !== \"LOADING\" && !!searchValue  ) {\n            searchStore.set({status: \"LOADING\"})\n        }\n    }, [searchValue]))\n\n    useEffect(() => {\n            triggerSearch();\n    }, [searchValue, triggerSearch])\n\n    return (<>\n        {searchResult.status === 'DONE' && (\n            <div>\n                <Tag name={\"Search result for '\" + searchResult.search + \"'\"} addLink={false}/>\n                <div style={{height: 30}}/>\n                <Grid container spacing={3} className={classes.root}>\n                    {(searchResult.data || []).map(({ref}) => <React.Fragment key={'search-icon-' + ref}>\n                        <MdiIcon icon={ICON_MAP[ref]}/>\n                    </React.Fragment>)}\n                </Grid>\n                {searchResult.data.length === 0 && <div style={{textAlign: 'center'}}>\n                    <div className={classes.loadingText}>\n                        Sorry, no results ...\n                        <div style={{fontSize: 80}}>:(</div>\n                    </div>\n                </div>}\n                <div style={{height: 70}}/>\n            </div>\n        )}\n        <ViewContainer show={searchResult.status === 'LOADING'} wrapperEl={<div className={classes.loader}/>}>\n            <CircularProgress/>\n            <div className={classes.loadingText}>Loading ...</div>\n        </ViewContainer>\n    </>);\n};\n","import React from 'react';\nimport {Container} from \"@material-ui/core\";\nimport {IconModal} from \"./components/modal/IconModal\";\nimport {TopBar} from \"./TopBar\";\nimport {GroupView} from \"./GroupView\";\nimport {SearchView} from \"./SearchView\";\nimport {useEffectOnce} from \"@milkscout/react\";\nimport {versionStore} from \"./store/versionStore\";\n\nexport const App = () => {\n    useEffectOnce(()=> {\n        if (window.location.pathname.indexOf('/mui') >-1) {\n            versionStore.set({version: \"V5\"})\n        } else if (window.location.pathname.indexOf('/material-ui')> -1){\n            versionStore.set({version: \"V4\"})\n        } else {\n            versionStore.set({version: \"V5\"})\n        }\n    })\n    return (<>\n            <TopBar/>\n            <div style={{height: 70}}/>\n            <Container maxWidth={\"lg\"}>\n                <SearchView/> \n                <GroupView/>\n                <IconModal/>\n            </Container>\n        </>\n    )\n};\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(\n    <Suspense fallback={null}>\n        <App/>\n    </Suspense>,\n    document.getElementById('root'),\n);"],"sourceRoot":""}