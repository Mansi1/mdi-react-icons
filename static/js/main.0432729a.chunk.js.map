{"version":3,"sources":["components/Code.tsx","components/Style.tsx","components/ShowCase.tsx","functions/downloadUrl.ts","store/iconStore.ts","components/modal/ModalLayout.tsx","components/modal/IconModal.tsx","generated/iconMap.tsx","functions/getIdentityArrayMap.ts","components/Tag.tsx","search/search.ts","MdiIcon.tsx","App.tsx","index.tsx"],"names":["hljs","registerLanguage","javascript","typescript","Code","children","useState","undefined","value","setValue","useEffect","highlight","className","rawHTML","Style","style","React","cloneElement","defined","props","getClasses","makeStyles","root","width","display","justifyContent","alignItems","color","palette","primary","main","backgroundSize","backgroundPosition","backgroundColor","backgroundImage","community","ShowCase","icon","classes","joinClasses","author","map","size","key","flex","textAlign","alt","name","src","window","location","origin","assetsUrl","effect","height","downloadImage","url","a","fetch","response","blob","downloadBlob","iconStore","atom","position","bottom","top","right","left","flexDirection","pointerEvents","gridContainer","margin","overflowY","grid","borderRadius","padding","paddingTop","maxWidth","closeButton","float","marginTop","marginRight","cursor","fontSize","title","textOverflow","overflow","ModalLayout","onClose","hideClose","ownClasses","content","titleClass","Grid","container","justify","item","xs","sm","lg","CloseIcon","onClick","e","preventDefault","DialogContent","getDefaultArray","arr","defaultElement","length","getImport","importName","IconModal","selectedIcon","useStore","handleClose","set","Modal","open","evt","stopPropagation","lines","push","componentFileName","componentAliasFileNames","forEach","alias","join","getAllImports","TableContainer","Table","TableBody","TableRow","TableCell","component","scope","aliases","tags","Button","variant","TAG_VALUES","ICON_MAP","getIdentityMap","DATA","id","TAG_ARRAY_MAP","array","idPropertyFun","result","i","property","getIdentityArrayMap","borderTop","borderBottom","rootWrapper","marginBottom","Tag","addLink","IconButton","navigator","clipboard","writeText","encodeURIComponent","LinkVariantIcon","searchIndex","elasticlunr","addField","setRef","metaJson","date","addDoc","arrow","common","black","tooltip","iconName","MdiIcon","memo","Tooltip","md","theme","paddingLeft","paddingRight","search","shape","spacing","marginLeft","breakpoints","up","searchIcon","inputRoot","inputInput","transition","transitions","create","App","useMountedState","searchValue","setSearchValue","searchResult","setSearchResult","triggerSearch","useDebounceFunction","useCallback","fields","boost","expand","AppBar","Container","Toolbar","Typography","noWrap","openUrlInNewTab","MagnifyIcon","InputBase","placeholder","input","inputProps","endAdornment","InputAdornment","onChange","target","show","ref","Fragment","filter","tag","ReactDOM","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.0432729a.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport hljs from 'highlight.js/lib/common'\nimport {RawHTML} from '@milkscout/react'\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport 'highlight.js/styles/github-dark.css'\nimport {HighlightResult} from \"highlight.js\";\n\nhljs.registerLanguage('javascript', javascript)\nhljs.registerLanguage('typescript', typescript)\n\nexport interface CodeProps {\n    children: string\n}\n\nexport const Code = ({children}: CodeProps) => {\n    const [value, setValue] = useState<HighlightResult | undefined>(undefined);\n\n    useEffect(() => {\n        setValue(hljs.highlight('typescript', children))\n    }, [children, setValue])\n\n    return (<div>\n        <pre>\n            <code className={'language-typescript hljs'}>\n                <RawHTML rawHTML={value?.value || ''} />\n            </code>\n        </pre>\n    </div>);\n};\n","import React, {CSSProperties, ReactElement} from 'react';\nimport {defined} from \"@milkscout/react\";\n\nexport interface StyleProps {\n  children: ReactElement\n  style: CSSProperties\n}\n\nexport const Style = ({children, style}: StyleProps) => {\n  return  React.cloneElement(children, {\n    style: { ...defined<CSSProperties>(children?.props?.style, {}), ...style },\n  });\n\n};\n","import React from 'react';\nimport {Icon} from \"../interfaces/Icon\";\nimport {makeStyles, Theme} from '@material-ui/core/styles';\nimport {joinClasses} from \"@milkscout/react\";\nimport {Style} from \"./Style\";\nimport {LazyLoadImage} from \"react-lazy-load-image-component\";\n\nconst getClasses = makeStyles(({palette}: Theme) => ({\n    root: {\n        width: '100%',\n        display: \"flex\",\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: palette.primary.main,\n        backgroundSize: '40px 40px',\n        backgroundPosition: '0 0, 20px 20px',\n        backgroundColor: '#fff',\n        backgroundImage: 'linear-gradient(45deg, #f4f4f4 25%, transparent 25%, transparent 75%, #f4f4f4 75%, #f4f4f4),\\n' +\n            'linear-gradient(45deg, #f4f4f4 25%, transparent 25%, transparent 75%, #f4f4f4 75%, #f4f4f4)',\n    },\n    community: {\n        color: '#ff814a',\n    }\n\n}));\n\nexport interface ShowCaseProps {\n    icon: Icon\n}\n\nexport const ShowCase = ({icon}: ShowCaseProps) => {\n    const classes = getClasses();\n    return (<div className={joinClasses({[classes.root]: true, [classes.community]: icon.author === 'Google'})}>\n            {[48, 72,96].map(size => (<Style key={\"show-case-\"+size} style={{flex: 1, textAlign: 'center'}}>\n                <LazyLoadImage\n                    alt={icon.name}\n                    src={window.location.origin +'/mdi-react-icons/'+icon.assetsUrl}\n                    effect={'blur'}\n                    height={size}\n                    width={size}\n                />\n            </Style>))}\n        </div>\n    );\n};\n","import {downloadBlob} from \"@milkscout/react\";\n\nexport const downloadImage = async ( name: string,url: string,) => {\n   const response = await fetch(url);\n   const blob = await response.blob();\n   downloadBlob(name, blob)\n}\n","import { atom } from 'nanostores'\nimport {Icon} from \"../interfaces/Icon\";\n\nexport const iconStore = atom<Icon| undefined>(undefined)\n","import React, { PropsWithChildren, ReactNode } from 'react';\nimport { Grid } from '@material-ui/core';\nimport CloseIcon from '@material-ui-extra/icons/CloseIcon';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { joinClasses } from '@milkscout/react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const getClasses = makeStyles(() => ({\n  root: {\n    position: 'absolute',\n    bottom: 0,\n    top: 0,\n    right: 0,\n    left: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    pointerEvents: 'none',\n  },\n  gridContainer: {\n    margin: 'auto',\n    overflowY: 'auto',\n  },\n  grid: {\n    backgroundColor: 'white',\n    pointerEvents: 'auto',\n    overflowY: 'auto',\n    height: '100%',\n    borderRadius: 5,\n    padding: 25,\n    paddingTop: 15,\n    maxWidth: 500,\n  },\n  closeButton: {\n    padding: 0,\n    float: 'right',\n    marginTop: -5,\n    marginRight: -15,\n    cursor: 'pointer',\n    fontSize: 28,\n  },\n  title: { textOverflow: 'ellipsis', overflow: 'hidden', textAlign: 'center' },\n}));\n\nexport interface IPropsModalLayout {\n  onClose: () => void;\n  title: ReactNode;\n  classes?: { root?: string; content?: string; title?: string };\n  hideClose?: boolean;\n}\n\nexport const ModalLayout = ({\n  children,\n  onClose,\n  title,\n  hideClose = false,\n  classes = {},\n}: PropsWithChildren<IPropsModalLayout>) => {\n  const ownClasses = getClasses();\n  const { root = '', content = '', title: titleClass } = classes;\n  return (\n    <div className={ownClasses.root}>\n      <Grid container justify=\"center\" className={ownClasses.gridContainer}>\n        <Grid item xs={12} sm={10} lg={6} className={joinClasses(ownClasses.grid, root)}>\n          {!hideClose && (\n            <CloseIcon\n              color=\"primary\"\n              className={ownClasses.closeButton}\n              onClick={(e) => {\n                e.preventDefault();\n                onClose();\n              }}\n            />\n          )}\n          <h1 className={joinClasses(ownClasses.title, titleClass)}>{title}</h1>\n          <DialogContent className={content} style={{padding: 0}}>{children}</DialogContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React from 'react';\nimport {Button, Modal} from \"@material-ui/core\";\nimport {Code} from \"../Code\";\nimport {ShowCase} from \"../ShowCase\";\nimport {downloadImage} from \"../../functions/downloadUrl\";\nimport {useStore} from '@nanostores/react'\nimport {iconStore} from \"../../store/iconStore\";\nimport {ModalLayout} from \"./ModalLayout\";\nimport {Icon} from \"../../interfaces/Icon\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport const getDefaultArray = (arr: Array<any>, defaultElement: any) => {\n    if (!arr || arr.length === 0) {\n        return [defaultElement]\n    }\n    return arr;\n}\nconst getImport = (importName: string) => {\n    return 'import { ' + importName + ' } from \"@material-ui-extra/icons/' + importName + '\";'\n}\n\nconst getAllImports= (icon: Icon): string => {\n    const lines: Array<string> = [];\n    lines.push('// standard import');\n    lines.push(getImport(icon.componentFileName));\n    lines.push('\\n');\n    if (icon.componentAliasFileNames.length > 0) {\n        lines.push('// alias import')\n        icon.componentAliasFileNames.forEach((alias) => {\n                lines.push(getImport(alias));\n            }\n        )\n    }\n    return lines.join('\\n')\n}\n\nexport const IconModal = () => {\n    const selectedIcon = useStore(iconStore)\n    const handleClose = () => {\n        iconStore.set(undefined)\n    }\n    const handleDownload = (icon: Icon) => {\n        return downloadImage(icon.name + '.svg', window.location.origin +'/mdi-react-icons/'+icon.assetsUrl)\n    }\n    return (<>\n        {selectedIcon && <Modal\n            open\n            onClick={(evt) => evt.stopPropagation()}\n            onClose={handleClose}\n        >\n            <>\n            <ModalLayout title={selectedIcon.name} onClose={handleClose}>\n                <Code>\n                    {getAllImports(selectedIcon)}\n                </Code>\n                <ShowCase icon={selectedIcon}/>\n                <TableContainer>\n                    <Table>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Author\n                                </TableCell>\n                                <TableCell>{selectedIcon.author}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Alias\n                                </TableCell>\n                                <TableCell>{getDefaultArray(selectedIcon.aliases, '-').join(' ')}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Tags\n                                </TableCell>\n                                <TableCell>{getDefaultArray(selectedIcon.tags, '-').join(' ')}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{margin: 10, textAlign: 'center'}}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleDownload(selectedIcon)}>\n                        Download svg</Button>\n                </div>\n            </ModalLayout>\n            </>\n        </Modal>}\n    </>);\n};\n","import {Icon} from \"./../interfaces/Icon\";\nimport DATA from \"./meta.json\"\nimport {getIdentityMap} from \"@milkscout/react\";\nimport {getIdentityArrayMap} from \"../functions/getIdentityArrayMap\";\n\nexport type Tag = 'Account / User'|'Agriculture'|'Alert / Error'|'Alpha / Numeric'|'Animal'|'Arrange'|'Arrow'|'Audio'|'Automotive'|'Banking'|'Battery'|'Brand / Logo'|'Cellphone / Phone'|'Clothing'|'Cloud'|'Color'|'Currency'|'Database'|'Date / Time'|'Developer / Languages'|'Device / Tech'|'Drawing / Art'|'Edit / Modify'|'Emoji'|'Files / Folders'|'Food / Drink'|'Form'|'Gaming / RPG'|'Geographic Information System'|'Hardware / Tools'|'Health / Beauty'|'Holiday'|'Home Automation'|'Lock'|'Math'|'Medical / Hospital'|'Music'|'Nature'|'Navigation'|'None'|'Notification'|'People / Family'|'Photography'|'Places'|'Printer'|'Religion'|'Science'|'Settings'|'Shape'|'Shopping'|'Social Media'|'Sport'|'Text / Content / Format'|'Tooltip'|'Transportation + Flying'|'Transportation + Other'|'Transportation + Road'|'Transportation + Water'|'Vector'|'Video / Movie'|'View'|'Weather';\n\nexport const TAG_VALUES: Array<Tag> = ['Account / User','Agriculture','Alert / Error','Alpha / Numeric','Animal','Arrange','Arrow','Audio','Automotive','Banking','Battery','Brand / Logo','Cellphone / Phone','Clothing','Cloud','Color','Currency','Database','Date / Time','Developer / Languages','Device / Tech','Drawing / Art','Edit / Modify','Emoji','Files / Folders','Food / Drink','Form','Gaming / RPG','Geographic Information System','Hardware / Tools','Health / Beauty','Holiday','Home Automation','Lock','Math','Medical / Hospital','Music','Nature','Navigation','None','Notification','People / Family','Photography','Places','Printer','Religion','Science','Settings','Shape','Shopping','Social Media','Sport','Text / Content / Format','Tooltip','Transportation + Flying','Transportation + Other','Transportation + Road','Transportation + Water','Vector','Video / Movie','View','Weather'];\n\n\nexport const ICON_MAP: {[id: string]: Icon} = getIdentityMap(DATA, (icon: Icon) => icon.id);\nexport const TAG_ARRAY_MAP: {[tag: string]: Array<Icon>} = getIdentityArrayMap(DATA, (icon: Icon) => {if(!!icon.tags[0]){\n        return icon.tags[0]\n    }\n    return 'NONE'\n});","import {IdPropertyFunction} from \"@milkscout/react/function/getIdentityMap\";\n\nexport const getIdentityArrayMap = <T>(array: T[], idPropertyFun: IdPropertyFunction<T>): Record<string, Array<T>> => {\n    const result: Record<string, Array<T>> = {}\n    for(let i = 0; i < array.length; i++){\n        const item: T = array[i];\n        const property = idPropertyFun(item);\n        if(typeof result[property] === 'undefined'){\n            result[property] = []\n        }\n        result[property].push(item)\n    }\n    return result;\n}","import React from 'react';\nimport {makeStyles, Theme} from '@material-ui/core/styles';\nimport LinkVariantIcon from \"@material-ui-extra/icons/LinkVariantIcon\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst getClasses = makeStyles(({palette}: Theme) => ({\n    root: {\n        borderTop: `2px solid ${palette.primary.main}`,\n        borderBottom: `2px solid ${palette.primary.main}`,\n    },\n    rootWrapper: {\n        textAlign: \"center\",\n        color: \"#fff\",\n        fontSize: 25,\n        padding: 10,\n        marginTop: 4,\n        marginBottom: 4,\n        backgroundColor: palette.primary.main\n    }\n}));\n\nexport interface TagProps {\n    name: string\n    addLink?: boolean\n}\n\nexport const Tag = ({name, addLink = true}: TagProps) => {\n    const classes = getClasses();\n    return (<div className={classes.root}>\n        <div className={classes.rootWrapper}>\n            {name} {addLink && <IconButton style={{color: '#fff'}} onClick={() => {\n            navigator.clipboard.writeText(`${window.location.origin}/mdi-react-icons/#${encodeURIComponent(name)}`);\n        }}>\n            <LinkVariantIcon/>\n        </IconButton>}\n        </div>\n    </div>);\n};\n","import elasticlunr from \"elasticlunr\";\nimport metaJson from \"../generated/meta.json\"\n\ntype Data = {id: string; name: string; aliases: Array<string>; tags: Array<string>};\n\nexport const searchIndex = elasticlunr<Data>();\n\nsearchIndex.addField('name');\nsearchIndex.addField('aliases');\nsearchIndex.addField('tags');\nsearchIndex.setRef('id');\n\n(metaJson as Array<Data>).forEach((date) => searchIndex.addDoc(date))\n","import React from 'react';\nimport {Icon} from \"./interfaces/Icon\";\nimport {Grid, Tooltip} from \"@material-ui/core\";\nimport {makeStyles, Theme} from '@material-ui/core/styles';\nimport {joinClasses} from \"@milkscout/react\";\nimport {iconStore} from \"./store/iconStore\";\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nconst getClasses = makeStyles(({palette}: Theme) => ({\n    root: {\n        cursor: 'pointer',\n        textAlign: 'center',\n        '& svg': {\n            fontSize: '90px !important',\n        },\n    },\n    arrow: {\n        color: palette.common.black,\n    },\n    tooltip: {\n        fontSize: 14,\n        backgroundColor: palette.common.black,\n    },\n    iconName: {width: 90, margin: \"auto\", color: '#000'}\n}));\n\nexport interface MdiIconProps {\n    icon: Icon\n}\n\nexport const MdiIcon = React.memo(({icon}: MdiIconProps) => {\n    const classes = getClasses();\n    const handleClick = () => {\n        iconStore.set(icon)\n    }\n    return (<Tooltip classes={{tooltip: classes.tooltip, arrow: classes.arrow}}\n                     title={<div style={{textAlign: 'center'}}>\n                         <div>{icon.name}</div>\n                         <div style={{borderTop: '1px dotted #fff'}}>{icon.author}</div>\n                     </div>} arrow>\n        <Grid item xs={4} sm={3} md={2} lg={1}\n              className={joinClasses({\n                  [classes.root]: true,\n              })}\n              onClick={handleClick}>\n            <LazyLoadImage\n                alt={icon.name}\n                src={window.location.origin +'/mdi-react-icons/'+icon.assetsUrl}\n                effect={'blur'}\n                height={90}\n                width={90}\n            />\n            <div className={classes.iconName}>{icon.name}</div>\n        </Grid>\n    </Tooltip>);\n})\n","import React, {useCallback, useEffect} from 'react';\nimport {ViewContainer} from \"@milkscout/react\";\nimport {Container, Grid, InputAdornment, InputBase} from \"@material-ui/core\";\nimport {makeStyles, Theme} from '@material-ui/core/styles';\nimport {IconModal} from \"./components/modal/IconModal\";\nimport {ICON_MAP, TAG_VALUES, TAG_ARRAY_MAP} from \"./generated/iconMap\"\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {Tag} from \"./components/Tag\";\nimport {openUrlInNewTab, useDebounceFunction, useMountedState} from \"@milkscout/react\";\nimport {searchIndex} from \"./search/search\";\nimport {MagnifyIcon} from \"@material-ui-extra/icons/MagnifyIcon\";\nimport {CloseIcon} from \"@material-ui-extra/icons/CloseIcon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {MdiIcon} from \"./MdiIcon\";\n\nconst getClasses = makeStyles((theme: Theme) => ({\n    root: {\n        color: theme.palette.primary.main,\n        paddingLeft: 15,\n        paddingRight: 15\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: 'rgba(255,255,255, 0.15)',\n        '&:hover': {\n            backgroundColor: 'rgba(255,255,255, 0.25)',\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        paddingRight: 5,\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        paddingRight: 0,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n}));\nexport const App = () => {\n    const classes = getClasses();\n    const [searchValue, setSearchValue] = useMountedState<string>('')\n    const [searchResult, setSearchResult] = useMountedState<Array<{ ref: string, score: number }> | undefined>(undefined)\n\n    const triggerSearch = useDebounceFunction(useCallback(() => {\n        const result = searchIndex.search(searchValue, {\n            fields: {\n                name: {boost: 2},\n                aliases: {boost: 2},\n                tags: {boost: 1},\n            },\n            expand: true,\n        });\n        setSearchResult(result)\n    }, [searchValue, setSearchResult]))\n\n    useEffect(() => {\n        if (!!searchValue) {\n            triggerSearch();\n        } else {\n            setSearchResult(undefined)\n        }\n    }, [searchValue, triggerSearch, setSearchResult])\n    return (<>\n            <AppBar position=\"fixed\">\n                <Container maxWidth={\"lg\"}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" noWrap\n                                    onClick={() => openUrlInNewTab('https://www.npmjs.com/package/@material-ui-extra/icons')}>\n                            @material-ui-extra/icons\n                        </Typography>\n                        <div className={classes.search}>\n                            <div className={classes.searchIcon}>\n                                <MagnifyIcon/>\n                            </div>\n                            <div className={classes.searchIcon}>\n                            </div>\n                            <InputBase\n                                placeholder=\"Search…\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                inputProps={{'aria-label': 'search'}}\n                                endAdornment={\n                                    <InputAdornment position={\"end\"}>\n                                        <IconButton size={\"small\"} color={'inherit'} onClick={() => {\n                                            setSearchValue('');\n                                            setSearchResult(undefined)\n                                        }}>\n                                            <CloseIcon/>\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                value={searchValue} onChange={(evt) => {\n                                setSearchValue(evt.target.value)\n                            }}\n                            />\n                        </div>\n                    </Toolbar>\n                </Container>\n            </AppBar>\n            <div style={{height: 70}}/>\n            <Container maxWidth={\"lg\"}>\n                 <ViewContainer show={typeof searchResult !== 'undefined'} key={'search-result'}>\n                    <Tag name={\"Search result for '\" + searchValue + \"'\"} addLink={false}/>\n                    <div style={{height: 30}}/>\n                    <Grid container spacing={3} className={classes.root}>\n                        {(searchResult || []).map(({ref}) => <React.Fragment key={'search-icon-' + ref}>\n                        <MdiIcon icon={ICON_MAP[ref]}/>\n                        </React.Fragment>)}\n                    </Grid>\n                    <div style={{height: 70}}/>\n                </ViewContainer>\n\n                <ViewContainer show={typeof searchResult === 'undefined'}> \n                    {TAG_VALUES.filter(tag => !!TAG_ARRAY_MAP[tag]).map((tag) => {\n                    return <div key={'tag-' + tag}>\n                        <Tag name={tag}/>\n                        <div style={{height: 30}}/>\n                        <Grid container spacing={3} className={classes.root}>\n                            {TAG_ARRAY_MAP[tag].map((icon) => <React.Fragment key={icon.id}>\n                               <MdiIcon icon={icon} />\n                            </React.Fragment>)}\n                        </Grid>\n                        <div id={tag} style={{height: 70}}/>\n                    </div>\n                })}\n                </ViewContainer>\n                <IconModal/>\n            </Container>\n        </>\n    )\n};\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Suspense fallback={null}>\n    <App />\n  </Suspense>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}